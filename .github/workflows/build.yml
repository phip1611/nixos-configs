name: Build Nix Unit Tests and NixOS System Configurations

on: [ push, pull_request, merge_group ]

jobs:
  list-nixos-options-of-common-module:
    name: run "listNixosOptions" utility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix run .\#listNixosOptions

  nix-fmt:
    name: check nix fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          nix fmt
          # Since there is no "nix fmt --check", we use the workaround and see
          # if git files have been changed.
          git diff --quiet

  # A big gun that runs all checks.
  # This gets better once https://github.com/NixOS/nix/issues/9629 is solved.
  checks:
    name: nix flake check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v24
      - uses: DeterminateSystems/magic-nix-cache-action@main
      # Performs some basic checks of the NixOS system configurations and runs
      # all checks.
      - run: nix flake check
      # Now perform dry-builds in CI. Dry-builds are not only sufficient but
      # also do not need gigabytes of data to be downloaded. This is especially
      # important to prevent "no space left" in GitHub CI.
      - name: "NixOS: dry-build #homepc"
        run: nix develop --command bash -c "nixos-rebuild dry-build --flake .#homepc"
      - name: "NixOS: dry-build #linkin-park"
        run: nix develop --command bash -c "nixos-rebuild dry-build --flake .#linkin-park"

