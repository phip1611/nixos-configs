name: Build Nix Unit Tests and NixOS System Configurations

on: [ push, pull_request, merge_group ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  list-nixos-options-of-common-module:
    name: run "listNixosOptions" utility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix run .\#listNixosOptions

  nix-fmt:
    name: check nix fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          nix fmt
          # Since there is no "nix fmt --check", we use the workaround and see
          # if git files have been changed.
          git diff --quiet

  # TODO make more fine-grained once https://github.com/NixOS/nix/issues/9629 is
  # solved.
  check:
    name: nix flake check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
      - uses: DeterminateSystems/magic-nix-cache-action@main
        # Performs some basic checks of the NixOS system configurations and runs
        # all checks.
      - run: nix flake check

  # Builds all NixOS systems from the flake, thus transitively also all custom
  # packages. This uses my host at nix-binary-cache.phip1611.dev as CI remote
  # builder.
  # 1) The GitHub CI is slow for such large builds
  # 2) The volume quickly runs out of space in GitHub CI for large systems
  # 3) This way, the binary cache gets filled: CI builder <=> Nix binary cache.
  build_nixos:
    name: Build all NixOS systems
    runs-on: ubuntu-latest
    env:
      # SSH port on asking-alexandria
      SSHOPTS: -p 7331
      SCPOPTS: -P 7331
      NIX_SSHOPTS: -p 7331
      CI_BUILDER_PRIV_KEY: ${{ secrets.CI_BUILDER_PRIV_KEY }}
      REMOTE_CI_PWD: /tmp/github-ci-run--${{ github.EVENT_NAME }}--${{ github.REF_TYPE }}--${{ github.RUN_ID }}--${{ github.RUN_ATTEMPT }}
    steps:
      - uses: actions/checkout@v4 # Required to reuse the local action.
        # Utilize the GitHub-specific local git repository so we do not have to
        # replicate any implementation details for the remote CI builder's
        # project checkout.
      - name: ZIP Git Checkout
        run: zip -r checkout.zip .
      - name: Prepare SSH Key to Access Remote Builder
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          # Configured as GitHub CI secret
          echo "$CI_BUILDER_PRIV_KEY" > ~/.ssh/key
          chmod 0600 ~/.ssh/key
      # Prevent "broken pipe" in long-running SSH sessions
      - name: Check Remote Builder is available
        run: ping -c 1 nix-binary-cache.phip1611.dev
      # Prevent "broken pipe" in long-running SSH sessions
      - name: Prepare Local SSH Config
        run: |
          echo 'ServerAliveInterval 30' | tee -a ~/.ssh/config
          echo 'ServerAliveCountMax 3' | tee -a ~/.ssh/config
      - name: Test SSH to Remote Builder works
        timeout-minutes: 1
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/key

          ssh -o StrictHostKeyChecking=accept-new ci-builder@nix-binary-cache.phip1611.dev "$SSHOPTS" "echo ssh works"
      - name: Checkout Repo on Remote Builder
        timeout-minutes: 1
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/key

          echo "[GitHub CI] REMOTE_CI_PWD: $REMOTE_CI_PWD"

          echo "[GitHub CI] Create destination directory"
          ssh ci-builder@nix-binary-cache.phip1611.dev $SSHOPTS <<EOF
            mkdir $REMOTE_CI_PWD
          EOF

          echo "[GitHub CI] Copy checkout.zip to destination"
          scp $SCPOPTS checkout.zip ci-builder@nix-binary-cache.phip1611.dev:/$REMOTE_CI_PWD

          echo "[GitHub CI] Unpack zip at destination directory"
          ssh ci-builder@nix-binary-cache.phip1611.dev $SSHOPTS <<EOF
            cd $REMOTE_CI_PWD || exit 1
            nix-shell -p unzip --run "unzip checkout.zip"
            test -d .git
            test -f flake.nix
          EOF
      - uses: ./.github/actions/build-nixos
        name: Build 'asking-alexandria'
        timeout-minutes: 60
        with:
          hostname: asking-alexandria
      - uses: ./.github/actions/build-nixos
        name: Build 'homepc'
        timeout-minutes: 60
        with:
          hostname: homepc
      - uses: ./.github/actions/build-nixos
        name: Build 'linkin-park'
        timeout-minutes: 60
        with:
          hostname: linkin-park
      - name: Cleanup on Remote Builder
        timeout-minutes: 1
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/key

          ssh ci-builder@nix-binary-cache.phip1611.dev $SSHOPTS <<EOF
            echo "[Remote Builder] Removing $REMOTE_CI_PWD"
            rm -r "$REMOTE_CI_PWD"
          EOF
